/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation_Layer.Tabelas;

import Business_Layer.Anuncio;
import Business_Layer.AnuncioVenda;
import Business_Layer.Leilao;
import Business_Layer.ModoVenda;
import Business_Layer.VendaDirecta;
import Presentation_Layer.Anuncio.Anuncio_Main;
import Presentation_Layer.Componentes.HyperLinkEditor;
import Presentation_Layer.Componentes.HyperLinkRenderer;
import Presentation_Layer.Mensagens.Ler_Mensagem;
import Presentation_Layer.Sale_Squared;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collection;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Set;
import javax.media.jai.ROI;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ricardobranco
 */
public class Tabela_Licitacao extends javax.swing.JPanel {

    /**
     * Creates new form Tabela_Licitacao
     */
    private List<Integer> anuncios;
    private final Sale_Squared root;

    public Tabela_Licitacao(final Sale_Squared root, Set<Anuncio> leiloes) {
        anuncios = new ArrayList<>();
        this.root = root;
        initComponents();

        ActionListener abre = new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                root.setBody(new Anuncio_Main(root, anuncios.get(jTable1.getSelectedRow())), root.getSistema().encontrarAnuncio(jTable1.getSelectedRow()).getTitulo());

            }
        };
        jTable1.getColumn("Anúncio").setCellRenderer(new HyperLinkRenderer());
        jTable1.getColumn("Anúncio").setCellEditor(
                new HyperLinkEditor(new JCheckBox(), abre));
        preenche(leiloes);

    }

    private void clean() {
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            jTable1.remove(i);
        }

    }

    private void preenche(Set<Anuncio> leiloes) {
        clean();
        for (Anuncio a : leiloes) {
            AnuncioVenda av = (AnuncioVenda) a;
            ModoVenda mv = av.getTipoVenda();
            String valor;
            if (mv.getClass().getSimpleName().equals("Leilao")) {
                Leilao l = (Leilao) mv;
                valor = "€ " + l.getPrecoActual();
            } else {
                VendaDirecta vd = (VendaDirecta) mv;
                valor = "€ " + vd.getPreco();
            }

            String inicio = formatoData(a.getDataInser());
            String fim = formatoData(a.getDataExpir());
            String estado = a.getEstadoAnuncio() == Anuncio.ABERTO ? "Aberto" : "Encerrado";
            String titulo = a.getTitulo();
            Object[] dados = {inicio, titulo, valor, estado, fim};
            ((DefaultTableModel) jTable1.getModel()).addRow(dados);
            anuncios.add(a.getCodigo());

        }





    }

    private String formatoData(final GregorianCalendar gc) {
        return "" + gc.get(GregorianCalendar.DAY_OF_MONTH) + "/"
                + gc.get(GregorianCalendar.MONTH) + "/"
                + gc.get(GregorianCalendar.YEAR) + " "
                + gc.get(GregorianCalendar.HOUR_OF_DAY) + ":"
                + gc.get(GregorianCalendar.MINUTE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Anúncio", "Valor", "Estado", "Expira"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setResizable(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
